#! /bin/sh
### BEGIN INIT INFO
# Provides:          olsrd
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: /etc/init.d/olsrd: start olsrd
### END INIT INFO

#		Based on skeleton script written by Miquel van Smoorenburg <miquels@cistron.nl>.
#		Modified for Debian 
#		by Ian Murdock <imurdock@gnu.ai.mit.edu>.
#		Modified for olsrd
#		by Holger Levsen <debian@layer-acht.org>
# 
# Version:	21-Dec-2006  
# modified:     01-Aug-2007
# 	        31-Jun-2008
#		30-May-2009

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/olsrd
NAME=olsrd
DESC=olsrd

PID_FILE=/var/run/$NAME.pid

test -x $DAEMON || exit 0

set -e

case "$1" in
  debug)
	echo -n "Starting $DESC: "
	$DAEMON $DAEMON_OPTS &
	# sleep til olsrd has been started
	while ! pidof $NAME > /dev/null ; do 
	  sleep 1
	done
	echo "$NAME."
	echo $(pidof $NAME) > $PID_FILE
	;;
  status)
	if [[ $(pidof $NAME) -ne 0 ]] ; then 
		echo "$NAME is running."
		exit 0
	else
		echo "$NAME is not running."
		exit 1
	fi
	;;
  start)
	#if [ "$START_OLSRD" != "YES" ] ; then exit 0 ; fi
	if [[ $(pidof $NAME) -ne 0 ]] ; then 
		echo "$NAME already running, doing nothing."
		exit 0
	fi
	echo -n "Starting $DESC: "
	$DAEMON $DAEMON_OPTS &
	# sleep til olsrd has been started
	while ! pidof $NAME > /dev/null ; do
	  sleep 1
	done
	echo "$NAME."        
	echo $(pidof $NAME) > $PID_FILE
	;;
  stop-soft)
	if [[ $(pidof $NAME) -eq 0 ]] ; then 
		echo "$NAME is not running."
		exit 0
	fi
	echo -n "Stopping $DESC: "
	kill -1 $(pidof $NAME)
        rm -f $PID_FILE
	echo "$NAME."
	;;
  stop)
	if [[ $(pidof $NAME) -eq 0 ]] ; then 
		echo "$NAME is not running."
		exit 0
	fi
	echo -n "Stopping $DESC: "
	kill -9 $(pidof $NAME)
        rm -f $PID_FILE
	echo "$NAME."
	;;
  restart|force-reload)
	echo -n "Restarting $DESC: "
	$0 stop
	sleep 1
	$0 start
	;;
  *)
	N=/etc/rc.d/rc.$NAME
	echo "Usage: $N {start|stop|restart|status}" >&2
	exit 1
	;;
esac

exit 0
